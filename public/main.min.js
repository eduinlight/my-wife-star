'use strict'; var drawBoard = document.querySelector('canvas'); var context = drawBoard.getContext('2d'); var board = { width: 200, height: 200 }; var pointRadius = 2; var rotationMatrix = [[function (t) { return Math.cos(t) }, function (t) { return -Math.sin(t) }], [function (t) { return Math.sin(t) }, function (t) { return Math.cos(t) }]]; function angleToRadian (t) { return t * Math.PI / 180 } function vectorScalarProduct (t, n) { return { x: t.x * n, y: t.y * n } } function rotatePoint (t, n) { var r = angleToRadian(n); var e = [[Math.cos(r), -Math.sin(r)], [Math.sin(r), Math.cos(r)]]; return { x: t.x * e[0][0] + t.y * e[1][0], y: t.x * e[0][1] + t.y * e[1][1] } } function toXY (t) { return { x: t.x + board.width / 2, y: -t.y + board.height / 2 } } function drawCircle (t, n) { context.beginPath(), context.arc(t.x, t.y, n, 0, 2 * Math.PI), context.stroke() } function drawPoint (t) { drawCircle(t, pointRadius) } function drawLine (t, n) { context.moveTo(t.x, t.y), context.lineTo(n.x, n.y), context.stroke() } function drawTriangle (t, n, r, e) { void 0 === e && (e = 'black'), context.beginPath(), context.moveTo(t.x, t.y), context.lineTo(n.x, n.y), context.lineTo(r.x, r.y), context.lineTo(t.x, t.y), context.fillStyle = e, context.fill() } var center = { x: 0, y: 0 }; drawPoint(toXY(center)); var circleOutRadius = board.width / 2; var circleInRadius = circleOutRadius / 2; function generateStarPoints (t, n) { for (var r = 360 / t, e = [{ x: n, y: 0 }], o = 1; o <= t; o++) { var a = rotatePoint(e[o - 1], r); e.push(a) } return e } function drawStar (n) { void 0 === n && (n = 5); for (var t = generateStarPoints(n, circleInRadius), r = generateStarPoints(n, circleOutRadius).map(function (t) { return rotatePoint(t, 360 / n / 2) }), e = [], o = 0; o < n; o++) { drawPoint(toXY(r[o])), drawPoint(toXY(t[o])), e.push([center, r[o], t[o]]), e.push([center, r[o], t[o + 1]]) } }drawCircle(toXY(center), circleOutRadius), drawCircle(toXY(center), circleInRadius), drawStar(6)
