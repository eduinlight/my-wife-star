{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","angle.ts","board.ts","index.ts","point.ts","radian.ts","star.ts","triangle.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","radian_1","__importDefault","Angle","default","this","value","Math","PI","_classCallCheck","Board","context","translate","width","height","from","to","moveTo","x","y","lineTo","stroke","center","radius","beginPath","arc","color","arguments","undefined","fillStyle","fill","triangle","b","point","drawCircle","fillCircle","star","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","triangles","Symbol","iterator","next","done","drawTriangle","err","return","colors","pos","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","fillTriangle","configure","board_1","star_1","point_1","root","document","querySelector","container","createElement","style","display","flexWrap","appendChild","canvas","text","innerHTML","textAlign","card","margin","getContext","board","fillStar","Point2D","angle","toRadian","rotationMatrix","cos","sin","Radian","triangle_1","angle_1","Star","_this","circleOutRadius","size","circleInRadius","innerPoints","generateCirclePoints","outerPoints","map","rotate","numPoints","generateTriangles","points","push","nextI","position","generateStar","Triangle"],"mappings":"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","file":"my-wife-star.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import Radian from './radian'\nexport default class Angle {\n  value: number\n\n  constructor (value: number) {\n    this.value = value\n  }\n\n  toRadian (): Radian {\n    return new Radian(this.value * Math.PI / 180)\n  }\n}\n","import Point2D from './point'\nimport Triangle from './triangle'\nimport Star from './star'\n\ntype Color = string | CanvasGradient | CanvasPattern\n\nclass Board {\n  width: number\n  height: number\n  context: CanvasRenderingContext2D\n\n  constructor (context: CanvasRenderingContext2D, width: number, height: number) {\n    this.width = width\n    this.height = height\n    this.context = context\n\n    this.configure()\n  }\n\n  configure (): void {\n    this.context.translate(this.width / 2.0, this.height / 2.0)\n  }\n\n  drawLine (from: Point2D, to: Point2D): void {\n    this.context.moveTo(from.x, from.y)\n    this.context.lineTo(to.x, to.y)\n    this.context.stroke()\n  }\n\n  drawCircle (center: Point2D, radius: number): void {\n    this.context.beginPath()\n    this.context.arc(center.x, center.y, radius, 0, 2 * Math.PI)\n    this.context.stroke()\n  }\n\n  fillCircle (center: Point2D, radius: number, color: Color = 'black'): void {\n    this.context.beginPath()\n    this.context.arc(center.x, center.y, radius, 0, 2 * Math.PI)\n    this.context.fillStyle = color\n    this.context.fill()\n  }\n\n  drawTriangle (triangle: Triangle): void {\n    this.context.beginPath()\n    this.context.moveTo(triangle.a.x, triangle.a.y)\n    this.context.lineTo(triangle.b.x, triangle.b.y)\n    this.context.lineTo(triangle.c.x, triangle.c.y)\n    this.context.lineTo(triangle.a.x, triangle.a.y)\n    this.context.stroke()\n  }\n\n  fillTriangle (triangle: Triangle, color: Color = 'black'): void {\n    this.context.beginPath()\n    this.context.moveTo(triangle.a.x, triangle.a.y)\n    this.context.lineTo(triangle.b.x, triangle.b.y)\n    this.context.lineTo(triangle.c.x, triangle.c.y)\n    this.context.lineTo(triangle.a.x, triangle.a.y)\n    this.context.fillStyle = color\n    this.context.fill()\n  }\n\n  drawPoint (point: Point2D, radius = 2): void {\n    this.drawCircle(point, radius)\n  }\n\n  fillPoint (point: Point2D, radius = 2, color: Color = 'black'): void {\n    this.fillCircle(point, radius, color)\n  }\n\n  drawStar (star: Star): void {\n    for (const triangle of star.triangles) {\n      this.drawTriangle(triangle)\n    }\n  }\n\n  fillStar (star: Star, colors: Color[] = ['red', 'black']): void {\n    let pos = -1\n\n    const nextColor = () => {\n      pos = (pos + 1) % colors.length\n      return colors[pos]\n    }\n\n    for (const triangle of star.triangles) {\n      const color = nextColor()\n      this.fillTriangle(triangle, color)\n    }\n  }\n}\n\nexport default Board\n","import Board from './board'\nimport Star from './star'\nimport Point2D from './point'\n\nconst root = document.querySelector('#root') as HTMLDivElement\n\nconst container = document.createElement('div')\ncontainer.style.display = 'flex'\ncontainer.style.flexWrap = 'wrap'\n\nroot.appendChild(container)\n\nconst starSize = 200\nconst totalPoints = 30\n\nfor (let i = 1; i <= totalPoints; i++) {\n  const canvas = document.createElement('canvas')\n  canvas.width = starSize\n  canvas.height = starSize\n\n  const text = document.createElement('h5')\n  text.innerHTML = `${i} points`\n  text.style.textAlign = 'center'\n\n  const card = document.createElement('div')\n  card.style.margin = '2px'\n  card.appendChild(text)\n  card.appendChild(canvas)\n\n  container.appendChild(card)\n\n  const context = canvas.getContext('2d')\n  if (context !== null) {\n    const board = new Board(context, starSize, starSize)\n    const star = new Star(new Point2D(0, 0), 200, i)\n\n    board.fillStar(star)\n  }\n}\n","import Angle from './angle'\n\nexport default class Point2D {\n  x: number\n  y: number\n\n  constructor (x: number, y:number) {\n    this.x = x\n    this.y = y\n  }\n\n  rotate (angle: Angle): Point2D {\n    const { value } = angle.toRadian()\n    const rotationMatrix = [\n      [Math.cos(value), -Math.sin(value)],\n      [Math.sin(value), Math.cos(value)]\n    ]\n\n    // matrix multiplication\n    return new Point2D(\n      this.x * rotationMatrix[0][0] + this.y * rotationMatrix[1][0],\n      this.x * rotationMatrix[0][1] + this.y * rotationMatrix[1][1]\n    )\n  }\n}\n","import Angle from './radian'\nexport default class Radian {\n  value: number\n\n  constructor (value: number) {\n    this.value = value\n  }\n\n  toAngle (): Angle {\n    return new Angle(this.value * 180 / Math.PI)\n  }\n}\n","import Triangle from './triangle'\nimport Point2D from './point'\nimport Angle from './angle'\n\nexport default class Star {\n  triangles: Triangle[] = []\n  size: number\n  position: Point2D\n  numPoints: number\n\n  constructor (position: Point2D, size: number, numPoints: number = 5) {\n    this.size = size\n    this.position = position\n    this.numPoints = numPoints\n    this.generateStar()\n  }\n\n  generateStar (): void {\n    const circleOutRadius = this.size / 2\n    const circleInRadius = circleOutRadius / 2\n\n    const innerPoints = this.generateCirclePoints(circleInRadius)\n    const outerPoints = this.generateCirclePoints(\n      circleOutRadius\n    ).map(point => point.rotate(new Angle(360 / this.numPoints / 2)))\n\n    this.triangles = this.generateTriangles(innerPoints, outerPoints)\n  }\n\n  private generateCirclePoints (radius: number): Point2D[] {\n    const angle = new Angle(360.0 / this.numPoints)\n    const startPoint = new Point2D(radius, 0)\n    const points = [startPoint]\n    for (let i = 1; i < this.numPoints; i++) {\n      const point = points[i - 1]\n      points.push(point.rotate(angle))\n    }\n\n    return points\n  }\n\n  private generateTriangles (innerPoints: Point2D[], outerPoints: Point2D[]): Triangle[] {\n    const triangles: Triangle[] = []\n    const numPoints = innerPoints.length\n    for (let i = 0; i < numPoints; i++) {\n      const nextI = (i + 1) % numPoints\n\n      triangles.push(new Triangle(this.position, outerPoints[i], innerPoints[i]))\n      triangles.push(new Triangle(this.position, outerPoints[i], innerPoints[nextI]))\n    }\n\n    return triangles\n  }\n}\n","import Point2D from './point'\n\nexport default class Triangle {\n  b: Point2D\n  a: Point2D\n  c: Point2D\n\n  constructor (a: Point2D, b: Point2D, c: Point2D) {\n    this.a = a\n    this.b = b\n    this.c = c\n  }\n}\n"]}